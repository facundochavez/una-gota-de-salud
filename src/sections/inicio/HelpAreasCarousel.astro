---
import helpAreasData from '@/data/help-areas.data.json';
import HelpAreaCard from '@/components/HelpAreaCard.astro';

const totalCards = helpAreasData.areas.length;
---

<section class='relative 2lg:min-h-[300vh] 2lg:!p-0'>
  <div class='w-full 2lg:hidden'>
    <h2>Áreas de ayuda</h2>
    <ul class='mt-14 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-14 list-none'>
      {helpAreasData.areas.map((area) => <HelpAreaCard {...area} />)}
    </ul>
  </div>

  <div class='hidden 2lg:flex sticky top-0 h-screen min-h-fit flex-col justify-center py-16' id='help-areas-wrapper'>
    <div class='w-full max-w-container mx-auto' id='help-areas-title'>
      <h2>Áreas de ayuda</h2>
    </div>

    <div class='w-screen relative left-1/2 -translate-x-1/2' id='help-areas-container'>
      <ul class='mt-16 flex gap-12 pl-[max(5%,calc((100vw-85rem)/2))]' id='help-areas-list'>
        {helpAreasData.areas.map((area) => <HelpAreaCard {...area} />)}
      </ul>
    </div>
  </div>
</section>

<script is:inline define:vars={{ totalCards }}>
  const title = document.getElementById('help-areas-title');
  const container = document.getElementById('help-areas-container');
  const list = document.getElementById('help-areas-list');
  const section = container?.closest('section');
  const firstCard = document.querySelector('#help-areas-list li');

  if (title && container && list && section && firstCard) {
    const updateMaxScroll = () => {
      // Usamos getBoundingClientRect para obtener las dimensiones exactas
      const cardRect = firstCard.getBoundingClientRect();
      const gap = 16 * 4;

      // Calculamos el ancho total del scroll
      const totalWidth = cardRect.width * totalCards + gap * (totalCards - 1);
      const containerWidth = title.getBoundingClientRect().width;

      return Math.max(0, totalWidth - containerWidth);
    };

    let maxScroll = updateMaxScroll();

    const updateScroll = () => {
      if (!section) return;

      const sectionRect = section.getBoundingClientRect();
      const sectionHeight = section.offsetHeight - window.innerHeight;
      const scrolled = Math.max(0, -sectionRect.top);
      const progress = Math.min(1, Math.max(0, (scrolled - 100) / (sectionHeight - 100)));

      const scrollX = maxScroll * progress;
      list.style.transform = `translateX(-${scrollX}px)`;
    };

    window.addEventListener('scroll', updateScroll);
    window.addEventListener('resize', () => {
      maxScroll = updateMaxScroll();
      updateScroll();
    });
    updateScroll();
  }
</script>

<style>
  #help-areas-list {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  #help-areas-list::-webkit-scrollbar {
    display: none;
  }
</style>
